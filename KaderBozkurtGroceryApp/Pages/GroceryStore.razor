@page "/grocerystore"


<h1>GroceryStore</h1>
Welcome to My Grocery Store.

<br /><br /><h4>+Add New Food </h4><br />

<label>IsleNumber </label><br />
<input placeholder="" @bind="newGroceryStoreIsleNumber"/><br />
<label>IsleName</label><br />
<input placeholder="" @bind="newGroceryStoreIsle" /><br />
<label>Product</label><br />
<input placeholder="" @bind="newGroceryStoreProduct" /><br />
<label>Quantity</label><br />
<input placeholder="" @bind="newGroceryStoreQuantity" /><br />
<label>Price</label><br />
<input placeholder="" @bind="newGroceryStorePrice" /><br />
<br /><button @onclick="AddGroceryStore">Add </button><br />




@if (grocerystores == null)
{
    <p><em>Loading...</em></p>
}
else if (!grocerystores.Any())
{
    <p><em> Please add some Food.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>IsleNumber</th>
                <th>IsleName</th>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity </th>
                

            </tr>
        </thead>
        <tbody>
            @foreach (var grocerystore in grocerystores)
            {
                <tr>
                    <td>@grocerystore.IsleNumber </td>
                    <td>@grocerystore.IsleName</td>
                     <td>@grocerystore.Product</td>
                     <td>@grocerystore.Price</td>
                    <td> @currentCount</td>
                    <button class="btn btn-primary" @onclick="IncrementCount">Increase</button>
                     <button class="btn btn-primary" @onclick="DecreaseCount">Decrease</button><br />
                    
                    
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<GroceryIsle> grocerystores = new();    
    private decimal newGroceryStorePrice;
    private int newGroceryStoreQuantity;
    private string newGroceryStoreIsle;    
    private string newGroceryStoreProduct;
    private int newGroceryStoreIsleNumber;
    private void AddGroceryStore()
    {
       
            GroceryIsle newIsleName; // if we end up making a new item, we want to store it here

        if (!string.IsNullOrWhiteSpace(newGroceryStoreIsle)) // does the new todo title contain a value?
        {
            // if it does, we add it to the list
            newIsleName = new GroceryIsle
            
            {
                IsleName = newGroceryStoreIsle
              
            };
             grocerystores.Add(newIsleName);
            newGroceryStoreIsle= ""; // string.Empty;
        }

         
         
            GroceryIsle newProduct;
            
        if (!string.IsNullOrWhiteSpace(newGroceryStoreIsle))
        {
           newProduct = new GroceryIsle
            {
               Product = newGroceryStoreIsle
              
            };
             grocerystores.Add(newProduct);
            newGroceryStoreIsle= ""; // string.Empty;
        }
        
             
    }
    private void ToggleGroceryStore(GroceryIsle Islenumber)
    {
        //First find the item
        //var grocerystore = grocerystores.First(x => x.IsleNumber == Islenumber);
       // grocerystore.IsComplete = !grocerystore.IsComplete;
    }

private int currentCount = 0;

    private void IncrementCount()
    {
        if (currentCount == 20){   
            return;}
         currentCount++;
        
    }
    private void DecreaseCount()
    {
        if (currentCount == 0){
            return;}
         currentCount--;
    }
}
    
    
    


